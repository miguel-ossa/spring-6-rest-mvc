server.port=8081
spring.application.name=spring-6-rest-mvc
logging.level.guru_springframework=debug
logging.level.org.zalando.logbook=trace

logging.level.guru.springframework=debug
spring.flyway.enabled=false

spring.docker.compose.enabled=false

#spring.security.user.name=user1
#spring.security.user.password=password

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9000

management.endpoint.health.probes.enabled=true
management.health.readinessstate.enabled=true
management.health.livenessstate.enabled=true

spring.cache.cache-names=beerCache, beerListCache, customerCache, customerListCache
spring.threads.virtual.enabled=true
logging.level.org.springframework.security=trace

spring.kafka.consumer.group-id=sfg
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-source=metadata
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.drop-target=drop-and-create.sql
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=drop-and-create.sql
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=drop-and-create
