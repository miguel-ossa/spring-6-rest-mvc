#name: spring-6-microservices
services:
  mysql:
    container_name: mysql
    image: mysql:8
    platform: linux/amd64
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: restdb
      MYSQL_USER: restadmin
      MYSQL_PASSWORD: password
    expose:
      - "3306"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 10
  kafka:
    image: confluentinc/cp-kafka:7.4.3
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  auth-server:
    container_name: auth-server
    image: spring-6-auth-server:0.0.1-SNAPSHOT
    platform: linux/amd64
    expose:
      - 9000
    ports:
      - "9000:9000"
  rest-mvc:
    container_name: rest-mvc
    image: spring-6-rest-mvc:0.0.1-SNAPSHOT
    platform: linux/amd64
    expose:
      - 8080
    environment:
      - SPRING_PROFILES_ACTIVE=mysql
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://auth-server:9000
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/restdb
      - SERVER_PORT=8080
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      mysql:
        condition: service_healthy
  gateway:
    container_name: gateway
    image: spring-6-gateway:0.0.1-SNAPSHOT
    platform: linux/amd64
    expose:
      - 8080
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://auth-server:9000
    depends_on:
      - auth-server
      - rest-mvc
  cold-service:
    container_name: cold-service
    image: spring-6-cold-service:0.0.1-SNAPSHOT
    platform: linux/amd64
    expose:
      - 8080
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
  cool-service:
    container_name: cool-service
    image: spring-6-cool-service:0.0.1-SNAPSHOT
    platform: linux/amd64
    expose:
      - 8080
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
  icecold-service:
    container_name: icecold-service
    image: spring-6-icecold-service:0.0.1-SNAPSHOT
    platform: linux/amd64
    expose:
      - 8080
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
